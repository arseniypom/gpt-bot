import { User as TelegramUser } from '@grammyjs/types';
import { InlineKeyboard } from 'grammy';
import User from '../../db/User';
import { MyContext } from '../types/types';
import { getProfileMessage } from '../utils/consts';
import { SUPPORT_MESSAGE_POSTFIX } from '../utils/consts';
import { logError } from '../utils/utilFunctions';

const myProfileKeyboard = new InlineKeyboard()
  .text('üéâ –ü–æ–¥–∫–ª—é—á–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', 'subscription')
  .row()
  .text('üí∞ –ö—É–ø–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã', 'topup');

export const myProfile = async (ctx: MyContext) => {
  const { id } = ctx.from as TelegramUser;

  try {
    const user = await User.findOne({ telegramId: id });
    if (!user) {
      await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start');
      return;
    }

    await ctx.reply(getProfileMessage(user), {
      parse_mode: 'MarkdownV2',
      reply_markup: myProfileKeyboard,
    });
  } catch (error) {
    await ctx.reply(
      `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è. ${SUPPORT_MESSAGE_POSTFIX}`,
    );
    logError({
      message: 'Error in /myProfile command',
      error,
      telegramId: ctx.from?.id,
      username: ctx.from?.username,
    });
  }
};
