import { CallbackQueryContext, InlineKeyboard, InputFile } from 'grammy';
import { User as TelegramUser } from '@grammyjs/types';
import User from '../../db/User';
import { logError } from '../utils/utilFunctions';
import { MyContext } from '../types/types';

export const startTopupKeyboard = new InlineKeyboard().text(
  '–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å',
  'topup',
);
const topupKeyboard = new InlineKeyboard()
  .text('1Ô∏è‚É£', 'req1')
  .text('2Ô∏è‚É£', 'req2')
  .text('3Ô∏è‚É£', 'req3')
  .row()
  .text('4Ô∏è‚É£', 'img1')
  .text('5Ô∏è‚É£', 'img2')
  .text('6Ô∏è‚É£', 'img3')
  .row()
  .text('7Ô∏è‚É£', 'combo1')
  .text('8Ô∏è‚É£', 'combo2')
  .text('9Ô∏è‚É£', 'combo3')
  .row();

export const topup = async (
  ctx: CallbackQueryContext<MyContext> | MyContext,
) => {
  if (ctx.callbackQuery) {
    await ctx.answerCallbackQuery();
  }

  try {
    await ctx.replyWithPhoto(new InputFile('src/images/packages-img.jpeg'), {
      caption: '*–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞–∫–µ—Ç–∞—Ö üëÜ*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è\\:',
      parse_mode: 'MarkdownV2',
      reply_markup: topupKeyboard,
    });
    await ctx.reply('–ï—Å–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—É—é –≤–µ—Ä—Å–∏—é: /topupText');
  } catch (error) {
    await ctx.reply(
      '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.',
    );
    logError({
      message: 'Error in /topup command',
      error,
      telegramId: ctx.from?.id,
      username: ctx.from?.username,
    });
  }
};

export const topupText = async (ctx: MyContext) => {
  try {
    const topupMessage = `
*–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–±–æ—Ä –∑–∞–ø—Ä–æ—Å–æ–≤\n–¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è*

*–¢–µ–∫—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã*
1Ô∏è‚É£ 100 –∑–∞–ø—Ä–æ—Å–æ–≤ \\(–±–∞–∑–æ–≤—ã–µ\\) ‚≠êÔ∏è 99‚ÇΩ
2Ô∏è‚É£ 500 –∑–∞–ø—Ä–æ—Å–æ–≤ \\(–±–∞–∑–æ–≤—ã–µ\\) ‚≠êÔ∏è 299‚ÇΩ
3Ô∏è‚É£ 1000 –∑–∞–ø—Ä–æ—Å–æ–≤\n\\(950 –±–∞–∑–æ–≤—ã–µ \\+ 50 –ø—Ä–æ\\) üåü 599‚ÇΩ

*–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π*
4Ô∏è‚É£ 10 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π üñºÔ∏è 119‚ÇΩ
5Ô∏è‚É£ 25 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π üñºÔ∏è 259‚ÇΩ
6Ô∏è‚É£ 50 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π üñºÔ∏è 449‚ÇΩ

*–ö–æ–º–±–æ* \\(üíé _—Å–∞–º—ã–π –≤—ã–≥–æ–¥–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç_\\)
7Ô∏è‚É£ 100 –∑–∞–ø—Ä–æ—Å–æ–≤ \\+ 10 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π 179‚ÇΩ
8Ô∏è‚É£ 500 –∑–∞–ø—Ä–æ—Å–æ–≤ \\+ 25 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π 499‚ÇΩ
9Ô∏è‚É£ 1000 –∑–∞–ø—Ä–æ—Å–æ–≤ \\(950 –±–∞–∑–æ–≤—ã–µ \\+ 50 –ø—Ä–æ\\)\n\\+ 50 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π 899‚ÇΩ
    `;
    await ctx.reply(topupMessage, {
      parse_mode: 'MarkdownV2',
      reply_markup: topupKeyboard,
    });
  } catch (error) {
    logError({
      message: 'Error in /topupText command',
      error,
      telegramId: ctx.from?.id,
      username: ctx.from?.username,
    });
  }
};
