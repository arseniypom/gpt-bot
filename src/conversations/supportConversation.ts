import { InlineKeyboard } from 'grammy';
import { type MyConversation, type MyContext } from '../types/types';
import { logError, sendMessageToAdmin } from '../utils/utilFunctions';
import { SUPPORT_MESSAGE } from '../utils/consts';

const cancelKeyboard = new InlineKeyboard().text(
  '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å',
  'cancelSupport',
);

export async function supportConversation(
  conversation: MyConversation,
  ctx: MyContext,
) {
  try {
    await ctx.reply(SUPPORT_MESSAGE, {
      reply_markup: cancelKeyboard,
      parse_mode: 'MarkdownV2',
    });

    const { message } = await conversation.waitFor('message:text');
    sendMessageToAdmin(
      `
üö® SUPPORT MESSAGE

Username: @${ctx.from?.username}
User ID: ${ctx.from?.id}
Message: "${message.text}"
    `,
    );

    await ctx.reply(
      '–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ! –ú—ã —Ä–∞–∑–±–µ—Ä–µ–º—Å—è –∏ –æ—Ç–≤–µ—Ç–∏–º –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ üôå',
    );
  } catch (error) {
    await ctx.reply(
      '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É. –ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞, –º—ã —É–∂–µ —Ä–∞–∑–±–∏—Ä–∞–µ–º—Å—è.',
    );
    logError({
      message: 'Error in support conversation',
      error,
      telegramId: ctx.from?.id,
      username: ctx.from?.username,
    });
  }

  return;
}
